[INFO              ] Logger: Record log in C:\Home\Gazooli\.kivy\logs\kivy_15-03-12_0.txt
[INFO              ] Kivy v1.8.0
[INFO              ] Factory: 157 symbols loaded
[DEBUG             ] Cache: register <kv.lang> with limit=None, timeout=Nones
[DEBUG             ] Cache: register <kv.image> with limit=None, timeout=60s
[DEBUG             ] Cache: register <kv.atlas> with limit=None, timeout=Nones
[INFO              ] Image: Providers: img_tex, img_dds, img_pygame, img_gif (img_pil ignored)
[DEBUG             ] Cache: register <kv.texture> with limit=1000, timeout=60s
[DEBUG             ] Cache: register <kv.shader> with limit=1000, timeout=3600s
[DEBUG             ] App: Loading kv <C:/Users/wade7892/PycharmProjects/untitled\mypaint.kv>
[DEBUG             ] App: kv <C:/Users/wade7892/PycharmProjects/untitled\mypaint.kv> not found
[DEBUG             ] Window: Ignored <egl_rpi> (import error)
[INFO              ] Window: Provider: pygame(['window_egl_rpi'] ignored)
[DEBUG             ] Window: Display driver windib
[DEBUG             ] Window: Actual window size: %dx%d
[DEBUG             ] Window: Actual color bits r%d g%d b%d a%d
[DEBUG             ] Window: Actual depth bits: %d
[DEBUG             ] Window: Actual stencil bits: %d
[DEBUG             ] Window: Actual multisampling samples: %d
[INFO              ] GL: OpenGL version <b'4.3.0'>
[INFO              ] GL: OpenGL vendor <b'NVIDIA Corporation'>
[INFO              ] GL: OpenGL renderer <b'Quadro K1100M/PCIe/SSE2'>
[INFO              ] GL: OpenGL parsed version: 4, 3
[INFO              ] GL: Shading version <b'4.30 NVIDIA via Cg compiler'>
[INFO              ] GL: Texture max size <16384>
[INFO              ] GL: Texture max units <32>
[DEBUG             ] Shader: Fragment compiled successfully
[DEBUG             ] Shader: Vertex compiled successfully
[DEBUG             ] ImagePygame: Load <C:\Python34\lib\site-packages\kivy\data\glsl\default.png>
[INFO              ] Window: virtual keyboard not allowed, single mode, not docked
[INFO              ] OSC: using <thread> for socket
[DEBUG             ] Base: Create provider from mouse
[DEBUG             ] Base: Create provider from wm_touch
[DEBUG             ] Base: Create provider from wm_pen
[INFO              ] Base: Start application main loop
[INFO              ] Base: Leaving application in progress...
