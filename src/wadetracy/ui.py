#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade HG on Fri Jun 24 08:55:02 2011

import wx
import string

# begin wxGlade: extracode
# end wxGlade


class MyPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # content of this block not found: did you rename this class?
        pass

    def __set_properties(self):
        # content of this block not found: did you rename this class?
        pass

    def __do_layout(self):
        # content of this block not found: did you rename this class?
        pass

# end of class MyPanel


class MainWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainWindow.__init__
        kwds["style"] = wx.CAPTION|wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.MainMenubar = wx.MenuBar()
        self.menuFile = wx.Menu()
        self.menuOpen = wx.MenuItem(self.menuFile, wx.NewId(), "Open Project", "Opens a project", wx.ITEM_NORMAL)
        self.menuFile.AppendItem(self.menuOpen)
        self.menuSave = wx.MenuItem(self.menuFile, wx.NewId(), "Save Project", "Save your project settings", wx.ITEM_NORMAL)
        self.menuFile.AppendItem(self.menuSave)
        self.MainMenubar.Append(self.menuFile, "File")
        self.menuHelp = wx.Menu()
        self.menuAbout = wx.MenuItem(self.menuHelp, wx.NewId(), "About", "About this program", wx.ITEM_NORMAL)
        self.menuHelp.AppendItem(self.menuAbout)
        self.MainMenubar.Append(self.menuHelp, "Help")
        self.SetMenuBar(self.MainMenubar)
        # Menu Bar end
        self.MainStatusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.mainFrame_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_FLAT)
        self.SetToolBar(self.mainFrame_toolbar)
        self.mainFrame_toolbar.AddLabelTool(wx.NewId(), "Open", wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo icon.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Open", "")
        self.mainFrame_toolbar.AddLabelTool(wx.NewId(), "Save", wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo icon.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Save", "")
        self.mainFrame_toolbar.AddSeparator()
        self.mainFrame_toolbar.AddLabelTool(wx.NewId(), "Build", wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo icon.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Build", "")
        self.mainFrame_toolbar.AddLabelTool(wx.NewId(), "Sign", wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo icon.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Sign", "")
        # Tool Bar end
        self.static_line_1 = wx.StaticLine(self, -1)
        self.projectBrowseButton = wx.Button(self, -1, "Browse")
        self.projectDirText = wx.TextCtrl(self, -1, "Select a project directory", style=wx.TE_READONLY)
        self.tabCtrl = wx.Notebook(self, -1, style=0)
        self.authorTab = wx.Panel(self.tabCtrl, -1)
        self.appNameLabel = wx.StaticText(self.authorTab, -1, "App Name")
        self.appNameText = wx.TextCtrl(self.authorTab, -1, "")
        self.appDescLabel = wx.StaticText(self.authorTab, -1, "App Description")
        self.appDescText = wx.TextCtrl(self.authorTab, -1, "", style=wx.TE_MULTILINE|wx.TE_WORDWRAP)
        self.authorLabel = wx.StaticText(self.authorTab, -1, "Author")
        self.authorText = wx.TextCtrl(self.authorTab, -1, "")
        self.websiteLabel = wx.StaticText(self.authorTab, -1, "Website")
        self.websiteText = wx.TextCtrl(self.authorTab, -1, "")
        self.emailLabel = wx.StaticText(self.authorTab, -1, "Email")
        self.emailText = wx.TextCtrl(self.authorTab, -1, "")
        self.copyrightLabel = wx.StaticText(self.authorTab, -1, "Copyright")
        self.copyrightText = wx.TextCtrl(self.authorTab, -1, "")
        self.licHrefLabel = wx.StaticText(self.authorTab, -1, "License href")
        self.licHrefText = wx.TextCtrl(self.authorTab, -1, "")
        self.licenseLabel = wx.StaticText(self.authorTab, -1, "License")
        self.licenseText = wx.TextCtrl(self.authorTab, -1, "", style=wx.TE_MULTILINE|wx.TE_WORDWRAP)
        self.infoTab = wx.Panel(self.tabCtrl, -1)
        self.versionLabel = wx.StaticText(self.infoTab, -1, "Version")
        self.versionText = wx.TextCtrl(self.infoTab, -1, "")
        self.headerLabel = wx.StaticText(self.infoTab, -1, "Custom Header")
        self.customHeaderText = wx.TextCtrl(self.infoTab, -1, "")
        self.backButtonBox = wx.CheckBox(self.infoTab, -1, "Override the back button default behavior to exit application")
        self.focusBox = wx.CheckBox(self.infoTab, -1, "Use focus-based navigation on trackpad smartphones")
        self.iconLabel = wx.StaticText(self.infoTab, -1, "Icon")
        self.iconText = wx.TextCtrl(self.infoTab, -1, "")
        self.iconBmpButton = wx.BitmapButton(self.infoTab, -1, wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo 80x80.png", wx.BITMAP_TYPE_ANY))
        self.hoverIconLabel = wx.StaticText(self.infoTab, -1, "Hover Icon")
        self.hoverIconText = wx.TextCtrl(self.infoTab, -1, "")
        self.hoverIconBmpButton = wx.BitmapButton(self.infoTab, -1, wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo 80x80.png", wx.BITMAP_TYPE_ANY))
        self.cacheTab = wx.Panel(self.tabCtrl, -1)
        self.cacheDisableBox = wx.CheckBox(self.cacheTab, -1, "Disable caching")
        self.cacheOptionsPanel = wx.Panel(self.cacheTab, -1, style=wx.RAISED_BORDER|wx.TAB_TRAVERSAL)
        self.cacheSizeLabel = wx.StaticText(self.cacheOptionsPanel, -1, "Maximum Cache Size (KB)")
        self.cacheSizeSpin = wx.SpinCtrl(self.cacheOptionsPanel, -1, "1024", min=0, max=2048, style=wx.SP_ARROW_KEYS|wx.TE_PROCESS_TAB|wx.TE_AUTO_URL)
        self.itemCacheLabel = wx.StaticText(self.cacheOptionsPanel, -1, "Maximum Individual Item Size (KB)")
        self.itemCacheSpin = wx.SpinCtrl(self.cacheOptionsPanel, -1, "128", min=0, max=1024, style=wx.SP_ARROW_KEYS|wx.TE_PROCESS_TAB|wx.TE_AUTO_URL)
        self.cacheAgeLabel = wx.StaticText(self.cacheOptionsPanel, -1, "Cache Age if not Specified (sec)")
        self.cacheAgeSpin = wx.SpinCtrl(self.cacheOptionsPanel, -1, "2592000", min=0, max=2592000, style=wx.SP_ARROW_KEYS|wx.TE_PROCESS_TAB|wx.TE_AUTO_URL)
        self.connectionsTab = wx.Panel(self.tabCtrl, -1)
        self.connectionOverrideBox = wx.CheckBox(self.connectionsTab, -1, "Override the default connection order and timeout")
        self.connectionList = wx.ListBox(self.connectionsTab, -1, choices=["MDS", "BIS-B", "TCP WIFI", "TCP Cellular", "WAP 2.0", "WAP"], style=wx.LB_SINGLE)
        self.addConnectionButton = wx.Button(self.connectionsTab, -1, "Add..")
        self.removeConnectionButton = wx.Button(self.connectionsTab, -1, "Remove")
        self.upConnectionButton = wx.Button(self.connectionsTab, -1, "Up")
        self.downConnectionButton = wx.Button(self.connectionsTab, -1, "Down")
        self.httpTimeoutLabel = wx.StaticText(self.connectionsTab, -1, "HTTP Connection Timeout (ms)")
        self.httpTimeoutText = wx.TextCtrl(self.connectionsTab, -1, "30000")
        self.startPagesTab = wx.Panel(self.tabCtrl, -1)
        self.forePageBox = wx.CheckBox(self.startPagesTab, -1, "Foreground start page")
        self.forePageText = wx.TextCtrl(self.startPagesTab, -1, "")
        self.backPageBox = wx.CheckBox(self.startPagesTab, -1, "Background start page")
        self.backPageText = wx.TextCtrl(self.startPagesTab, -1, "")
        self.autoRunBox = wx.CheckBox(self.startPagesTab, -1, "Run automatically on install and device startup")
        self.commandLineBox = wx.CheckBox(self.startPagesTab, -1, "Allow parameters from a command line invoke")
        self.loadingScreenPane = wx.Panel(self.tabCtrl, -1)
        self.foreScreenLabel = wx.StaticText(self.loadingScreenPane, -1, "Foreground Image")
        self.foreScreenText = wx.TextCtrl(self.loadingScreenPane, -1, "")
        self.foreScreenBMP = wx.BitmapButton(self.loadingScreenPane, -1, wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo 80x80.png", wx.BITMAP_TYPE_ANY))
        self.backScreenLabel = wx.StaticText(self.loadingScreenPane, -1, "Background Image")
        self.backScreenText = wx.TextCtrl(self.loadingScreenPane, -1, "")
        self.backScreenBMP = wx.BitmapButton(self.loadingScreenPane, -1, wx.Bitmap("C:\\Documents and Settings\\watracy\\workspace\\Webworks\\res\\subspace logo 80x80.png", wx.BITMAP_TYPE_ANY))
        self.backColorLabel = wx.StaticText(self.loadingScreenPane, -1, "Background Color")
        self.backColorText = wx.TextCtrl(self.loadingScreenPane, -1, "")
        self.backColorPick = wx.ColourPickerCtrl(self.loadingScreenPane, -1)
        self.firstLaunchBox = wx.CheckBox(self.loadingScreenPane, -1, "Show on first launch")
        self.pageLocationLabel = wx.StaticText(self.loadingScreenPane, -1, "Show for pages that are")
        self.localPageBox = wx.CheckBox(self.loadingScreenPane, -1, "Local")
        self.remotePageBox = wx.CheckBox(self.loadingScreenPane, -1, "Remote")
        self.transitionPanel = wx.Panel(self.loadingScreenPane, -1, style=wx.SIMPLE_BORDER|wx.TAB_TRAVERSAL)
        self.transitionLabel = wx.StaticText(self.transitionPanel, -1, "Transition Effects")
        self.transitionTypeLabel = wx.StaticText(self.transitionPanel, -1, "Type")
        self.transitionDurationLabel = wx.StaticText(self.transitionPanel, -1, "Duration (ms)")
        self.transitionDirectionLabel = wx.StaticText(self.transitionPanel, -1, "Direction")
        self.transitionTypeDrop = wx.ComboBox(self.transitionPanel, -1, choices=["None", "Slide Over", "Slide Push", "Fade In", "Fade Out", "Wipe In", "Wipe Out", "Zoom In", "Zoomm Out"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.transitionDurationSpin = wx.SpinCtrl(self.transitionPanel, -1, "", min=0, max=100)
        self.transitionDirectionDrop = wx.ComboBox(self.transitionPanel, -1, choices=["Left", "Right", "Up", "Down"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.permissionsTab = wx.Panel(self.tabCtrl, -1)
        self.domainsList = wx.ListBox(self.permissionsTab, -1, choices=[], style=wx.LB_SINGLE|wx.LB_NEEDED_SB)
        self.addDomainButton = wx.Button(self.permissionsTab, -1, "Add Domain")
        self.addFeatureButton = wx.Button(self.permissionsTab, -1, "Add Feature")
        self.removeDomainButton = wx.Button(self.permissionsTab, -1, "Remove")
        self.permissionsDivider = wx.StaticLine(self.permissionsTab, -1)
        self.domainDetailsLabel = wx.StaticText(self.permissionsTab, -1, "Domain Details")
        self.domainNameLabel = wx.StaticText(self.permissionsTab, -1, "Domain Name")
        self.domainNameText = wx.TextCtrl(self.permissionsTab, -1, "")
        self.subdomainBox = wx.CheckBox(self.permissionsTab, -1, "Apply access request to subdomains")
        self.createConfigButton = wx.Button(self, -1, "Create Config")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnOpen, self.menuOpen)
        self.Bind(wx.EVT_MENU, self.OnSave, self.menuSave)
        self.Bind(wx.EVT_MENU, self.OnAbout, self.menuAbout)
        self.Bind(wx.EVT_TOOL, self.OnOpenProject, id=-1)
        self.Bind(wx.EVT_TOOL, self.OnSaveProject, id=-1)
        self.Bind(wx.EVT_TOOL, self.OnBuildProject, id=-1)
        self.Bind(wx.EVT_TOOL, self.OnSignProject, id=-1)
        self.Bind(wx.EVT_BUTTON, self.OnBrowse, self.projectBrowseButton)
        self.Bind(wx.EVT_BUTTON, self.OnIconChange, self.iconBmpButton)
        self.Bind(wx.EVT_BUTTON, self.OnHoverIconChange, self.hoverIconBmpButton)
        self.Bind(wx.EVT_CHECKBOX, self.OnDisableCache, self.cacheDisableBox)
        self.Bind(wx.EVT_SPINCTRL, self.OnCacheSizeChange, self.cacheSizeSpin)
        self.Bind(wx.EVT_CHECKBOX, self.OnConnectionOverride, self.connectionOverrideBox)
        self.Bind(wx.EVT_BUTTON, self.OnAddConnection, self.addConnectionButton)
        self.Bind(wx.EVT_BUTTON, self.OnRemoveConnection, self.removeConnectionButton)
        self.Bind(wx.EVT_BUTTON, self.OnUpConnection, self.upConnectionButton)
        self.Bind(wx.EVT_BUTTON, self.OnDownConnection, self.downConnectionButton)
        self.Bind(wx.EVT_CHECKBOX, self.OnForePageCheck, self.forePageBox)
        self.Bind(wx.EVT_CHECKBOX, self.OnBackPageCheck, self.backPageBox)
        self.Bind(wx.EVT_BUTTON, self.OnForeImageSelect, self.foreScreenBMP)
        self.Bind(wx.EVT_BUTTON, self.OnBackImageSelect, self.backScreenBMP)
        self.Bind(wx.EVT_COMBOBOX, self.OnTransitionTypeSelection, self.transitionTypeDrop)
        self.Bind(wx.EVT_LISTBOX_DCLICK, self.OnDomainSelect, self.domainsList)
        self.Bind(wx.EVT_BUTTON, self.OnAddDomain, self.addDomainButton)
        self.Bind(wx.EVT_BUTTON, self.OnAddFeature, self.addFeatureButton)
        self.Bind(wx.EVT_BUTTON, self.OnRemoveButton, self.removeDomainButton)
        self.Bind(wx.EVT_BUTTON, self.OnCreateConfig, self.createConfigButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainWindow.__set_properties
        self.SetTitle("Webworks Project Creator")
        self.SetSize((450, 482))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.MainStatusbar.SetStatusWidths([-1])
        # statusbar fields
        MainStatusbar_fields = ["status"]
        for i in range(len(MainStatusbar_fields)):
            self.MainStatusbar.SetStatusText(MainStatusbar_fields[i], i)
        self.mainFrame_toolbar.Realize()
        self.projectDirText.SetMinSize((335, 22))
        self.appDescText.SetMinSize((328, 69))
        self.licenseText.SetMinSize((300, 66))
        self.focusBox.SetValue(1)
        self.iconText.SetMinSize((265, 21))
        self.iconBmpButton.SetMinSize((40, 40))
        self.hoverIconText.SetMinSize((265, 21))
        self.hoverIconBmpButton.SetMinSize((40, 40))
        self.connectionList.Enable(False)
        self.connectionList.SetSelection(0)
        self.addConnectionButton.Enable(False)
        self.removeConnectionButton.Enable(False)
        self.upConnectionButton.Enable(False)
        self.downConnectionButton.Enable(False)
        self.httpTimeoutLabel.Enable(False)
        self.httpTimeoutText.Enable(False)
        self.forePageBox.SetValue(1)
        self.backPageText.Enable(False)
        self.autoRunBox.Enable(False)
        self.autoRunBox.SetValue(1)
        self.foreScreenText.SetMinSize((270, 21))
        self.foreScreenBMP.SetMinSize((21, 21))
        self.backScreenText.SetMinSize((270, 21))
        self.backScreenBMP.SetMinSize((21, 21))
        self.transitionTypeDrop.SetSelection(-1)
        self.transitionDurationSpin.Enable(False)
        self.transitionDirectionDrop.Enable(False)
        self.transitionDirectionDrop.SetSelection(-1)
        self.domainsList.SetMinSize((280, 120))
        self.removeDomainButton.Enable(False)
        self.domainNameText.SetMinSize((300, 21))
        self.createConfigButton.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainWindow.__do_layout
        mainVertSizer = wx.BoxSizer(wx.VERTICAL)
        permissionsSizer = wx.BoxSizer(wx.VERTICAL)
        domainDetailsGrid = wx.FlexGridSizer(3, 2, 5, 5)
        domainSizer = wx.BoxSizer(wx.HORIZONTAL)
        domainCtrlSizer = wx.BoxSizer(wx.VERTICAL)
        loadingScreenSizer = wx.BoxSizer(wx.VERTICAL)
        transitionSizer = wx.BoxSizer(wx.VERTICAL)
        transitionGrid = wx.FlexGridSizer(2, 3, 5, 5)
        pageCtrlGrid = wx.FlexGridSizer(3, 3, 5, 5)
        loadingScreenGrid = wx.FlexGridSizer(2, 3, 5, 5)
        pageSizer = wx.BoxSizer(wx.VERTICAL)
        pageGrid = wx.FlexGridSizer(3, 2, 5, 5)
        connectionSizer = wx.BoxSizer(wx.VERTICAL)
        connectionGrid = wx.FlexGridSizer(2, 2, 5, 5)
        connectionButtonSizer = wx.BoxSizer(wx.VERTICAL)
        cacheSizer = wx.BoxSizer(wx.VERTICAL)
        cacheOptionsSizer = wx.BoxSizer(wx.HORIZONTAL)
        cacheGrid = wx.FlexGridSizer(3, 2, 5, 5)
        infoSizer = wx.BoxSizer(wx.HORIZONTAL)
        infoGrid = wx.FlexGridSizer(3, 2, 5, 5)
        hoverIconSizer = wx.BoxSizer(wx.HORIZONTAL)
        iconSizer = wx.BoxSizer(wx.HORIZONTAL)
        authorSizer = wx.BoxSizer(wx.HORIZONTAL)
        authorGrid = wx.FlexGridSizer(9, 2, 5, 5)
        projectHorizSizer = wx.BoxSizer(wx.HORIZONTAL)
        mainVertSizer.Add(self.static_line_1, 0, wx.EXPAND, 0)
        projectHorizSizer.Add(self.projectBrowseButton, 0, 0, 0)
        projectHorizSizer.Add(self.projectDirText, 0, wx.LEFT|wx.EXPAND, 10)
        mainVertSizer.Add(projectHorizSizer, 0, wx.ALL|wx.ALIGN_RIGHT, 10)
        authorGrid.Add(self.appNameLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.appNameText, 0, wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 0)
        authorGrid.Add(self.appDescLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.appDescText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.authorLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.authorText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.websiteLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.websiteText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.emailLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.emailText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.copyrightLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.copyrightText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.licHrefLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.licHrefText, 0, wx.EXPAND, 0)
        authorGrid.Add(self.licenseLabel, 0, wx.ALIGN_RIGHT, 0)
        authorGrid.Add(self.licenseText, 0, wx.EXPAND, 0)
        authorSizer.Add(authorGrid, 0, wx.ALL|wx.EXPAND, 5)
        self.authorTab.SetSizer(authorSizer)
        infoGrid.Add(self.versionLabel, 0, wx.ALIGN_RIGHT, 0)
        infoGrid.Add(self.versionText, 0, wx.EXPAND, 0)
        infoGrid.Add(self.headerLabel, 0, 0, 0)
        infoGrid.Add(self.customHeaderText, 0, wx.EXPAND, 0)
        infoGrid.Add((20, 20), 0, 0, 0)
        infoGrid.Add(self.backButtonBox, 0, 0, 0)
        infoGrid.Add((20, 20), 0, 0, 0)
        infoGrid.Add(self.focusBox, 0, 0, 0)
        infoGrid.Add(self.iconLabel, 0, wx.ALIGN_RIGHT, 0)
        iconSizer.Add(self.iconText, 0, 0, 0)
        iconSizer.Add(self.iconBmpButton, 0, 0, 0)
        infoGrid.Add(iconSizer, 1, wx.EXPAND, 0)
        infoGrid.Add(self.hoverIconLabel, 0, wx.ALIGN_RIGHT, 0)
        hoverIconSizer.Add(self.hoverIconText, 0, 0, 0)
        hoverIconSizer.Add(self.hoverIconBmpButton, 0, 0, 0)
        infoGrid.Add(hoverIconSizer, 1, wx.EXPAND, 0)
        infoSizer.Add(infoGrid, 1, wx.ALL|wx.EXPAND, 5)
        self.infoTab.SetSizer(infoSizer)
        cacheSizer.Add(self.cacheDisableBox, 0, wx.ALL|wx.EXPAND, 5)
        cacheGrid.Add(self.cacheSizeLabel, 0, wx.ALIGN_RIGHT, 0)
        cacheGrid.Add(self.cacheSizeSpin, 0, 0, 0)
        cacheGrid.Add(self.itemCacheLabel, 0, wx.ALIGN_RIGHT, 0)
        cacheGrid.Add(self.itemCacheSpin, 0, 0, 0)
        cacheGrid.Add(self.cacheAgeLabel, 0, wx.ALIGN_RIGHT, 0)
        cacheGrid.Add(self.cacheAgeSpin, 0, 0, 0)
        cacheOptionsSizer.Add(cacheGrid, 1, wx.ALL|wx.EXPAND, 5)
        self.cacheOptionsPanel.SetSizer(cacheOptionsSizer)
        cacheSizer.Add(self.cacheOptionsPanel, 1, wx.ALL|wx.EXPAND, 5)
        self.cacheTab.SetSizer(cacheSizer)
        connectionSizer.Add(self.connectionOverrideBox, 0, wx.ALL|wx.EXPAND, 5)
        connectionGrid.Add(self.connectionList, 0, wx.EXPAND, 0)
        connectionButtonSizer.Add(self.addConnectionButton, 0, wx.BOTTOM, 5)
        connectionButtonSizer.Add(self.removeConnectionButton, 0, wx.BOTTOM, 5)
        connectionButtonSizer.Add(self.upConnectionButton, 0, wx.BOTTOM, 5)
        connectionButtonSizer.Add(self.downConnectionButton, 0, 0, 0)
        connectionGrid.Add(connectionButtonSizer, 1, wx.EXPAND, 0)
        connectionGrid.Add(self.httpTimeoutLabel, 0, wx.ALIGN_RIGHT, 0)
        connectionGrid.Add(self.httpTimeoutText, 0, 0, 0)
        connectionSizer.Add(connectionGrid, 1, wx.EXPAND, 0)
        self.connectionsTab.SetSizer(connectionSizer)
        pageGrid.Add(self.forePageBox, 0, 0, 0)
        pageGrid.Add(self.forePageText, 0, wx.EXPAND, 0)
        pageGrid.Add(self.backPageBox, 0, 0, 0)
        pageGrid.Add(self.backPageText, 0, wx.EXPAND, 0)
        pageGrid.Add((20, 20), 0, 0, 0)
        pageGrid.Add(self.autoRunBox, 0, 0, 0)
        pageSizer.Add(pageGrid, 1, wx.ALL, 5)
        pageSizer.Add(self.commandLineBox, 0, wx.ALL|wx.EXPAND, 5)
        pageSizer.Add((20, 190), 0, 0, 0)
        self.startPagesTab.SetSizer(pageSizer)
        loadingScreenGrid.Add(self.foreScreenLabel, 0, 0, 0)
        loadingScreenGrid.Add(self.foreScreenText, 0, 0, 0)
        loadingScreenGrid.Add(self.foreScreenBMP, 0, 0, 0)
        loadingScreenGrid.Add(self.backScreenLabel, 0, 0, 0)
        loadingScreenGrid.Add(self.backScreenText, 0, 0, 0)
        loadingScreenGrid.Add(self.backScreenBMP, 0, 0, 0)
        loadingScreenSizer.Add(loadingScreenGrid, 0, wx.ALL|wx.EXPAND, 5)
        pageCtrlGrid.Add(self.backColorLabel, 0, 0, 0)
        pageCtrlGrid.Add(self.backColorText, 0, 0, 0)
        pageCtrlGrid.Add(self.backColorPick, 1, wx.EXPAND, 0)
        pageCtrlGrid.Add(self.firstLaunchBox, 0, 0, 0)
        pageCtrlGrid.Add((20, 20), 0, 0, 0)
        pageCtrlGrid.Add((20, 20), 0, 0, 0)
        pageCtrlGrid.Add(self.pageLocationLabel, 0, 0, 0)
        pageCtrlGrid.Add(self.localPageBox, 0, 0, 0)
        pageCtrlGrid.Add(self.remotePageBox, 0, 0, 0)
        loadingScreenSizer.Add(pageCtrlGrid, 0, wx.ALL|wx.EXPAND, 5)
        transitionSizer.Add(self.transitionLabel, 0, wx.ALL, 5)
        transitionGrid.Add(self.transitionTypeLabel, 1, wx.LEFT|wx.TOP|wx.EXPAND, 10)
        transitionGrid.Add(self.transitionDurationLabel, 1, wx.LEFT|wx.TOP|wx.EXPAND, 10)
        transitionGrid.Add(self.transitionDirectionLabel, 1, wx.LEFT|wx.TOP|wx.EXPAND, 10)
        transitionGrid.Add(self.transitionTypeDrop, 1, wx.ALL|wx.EXPAND, 5)
        transitionGrid.Add(self.transitionDurationSpin, 1, wx.ALL|wx.EXPAND, 5)
        transitionGrid.Add(self.transitionDirectionDrop, 1, wx.ALL|wx.EXPAND, 5)
        transitionSizer.Add(transitionGrid, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.transitionPanel.SetSizer(transitionSizer)
        loadingScreenSizer.Add(self.transitionPanel, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 5)
        self.loadingScreenPane.SetSizer(loadingScreenSizer)
        domainSizer.Add(self.domainsList, 0, 0, 0)
        domainCtrlSizer.Add(self.addDomainButton, 0, wx.BOTTOM|wx.EXPAND, 5)
        domainCtrlSizer.Add(self.addFeatureButton, 0, wx.BOTTOM|wx.EXPAND, 5)
        domainCtrlSizer.Add(self.removeDomainButton, 0, wx.EXPAND, 0)
        domainSizer.Add(domainCtrlSizer, 1, wx.ALL|wx.EXPAND, 5)
        permissionsSizer.Add(domainSizer, 1, wx.ALL|wx.EXPAND, 5)
        permissionsSizer.Add(self.permissionsDivider, 0, wx.EXPAND, 0)
        domainDetailsGrid.Add(self.domainDetailsLabel, 0, 0, 0)
        domainDetailsGrid.Add((20, 20), 0, 0, 0)
        domainDetailsGrid.Add(self.domainNameLabel, 0, wx.ALIGN_RIGHT, 0)
        domainDetailsGrid.Add(self.domainNameText, 0, 0, 0)
        domainDetailsGrid.Add((20, 20), 0, 0, 0)
        domainDetailsGrid.Add(self.subdomainBox, 0, 0, 0)
        permissionsSizer.Add(domainDetailsGrid, 1, wx.EXPAND, 0)
        self.permissionsTab.SetSizer(permissionsSizer)
        self.tabCtrl.AddPage(self.authorTab, "Author/License")
        self.tabCtrl.AddPage(self.infoTab, "Info")
        self.tabCtrl.AddPage(self.cacheTab, "Cache")
        self.tabCtrl.AddPage(self.connectionsTab, "Connections")
        self.tabCtrl.AddPage(self.startPagesTab, "Start Pages")
        self.tabCtrl.AddPage(self.loadingScreenPane, "Loading Screen")
        self.tabCtrl.AddPage(self.permissionsTab, "Permissions")
        mainVertSizer.Add(self.tabCtrl, 1, wx.ALL|wx.EXPAND, 10)
        mainVertSizer.Add(self.createConfigButton, 0, wx.ALL|wx.ALIGN_RIGHT, 10)
        self.SetSizer(mainVertSizer)
        self.Layout()
        # end wxGlade

    def OnBrowse(self, event): # wxGlade: MainWindow.<event_handler>
        """Browse for the directory of the new project"""
        dirPath = ""
        dirDlg = wx.DirDialog(self, "Choose a project directory", dirPath )
        if dirDlg.ShowModal() == wx.ID_OK:
            self.projectDirText.SetValue(dirDlg.GetPath())
            self.destDir = dirDlg.GetPath()
            self.createConfigButton.Enable()

    def OnOpen(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnOpen' not implemented"
        event.Skip()

    def OnSave(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnSave' not implemented"
        event.Skip()

    def OnAbout(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnAbout' not implemented"
        event.Skip()

    def OnIconChange(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnIconChange' not implemented"
        event.Skip()

    def OnHoverIconChange(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnHoverIconChange' not implemented"
        event.Skip()

    def OnDisableCache(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnDisableCache' not implemented"
        event.Skip()

    def OnCacheSizeChange(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnCacheSizeChange' not implemented"
        event.Skip()

    def OnConnectionOverride(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnConnectionOverride' not implemented"
        event.Skip()

    def OnAddConnection(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnAddConnection' not implemented"
        event.Skip()

    def OnRemoveConnection(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnRemoveConnection' not implemented"
        event.Skip()

    def OnUpConnection(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnUpConnection' not implemented"
        event.Skip()

    def OnDownConnection(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnDownConnection' not implemented"
        event.Skip()

    def OnForePageCheck(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnForePageCheck' not implemented"
        event.Skip()

    def OnBackPageCheck(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnBackPageCheck' not implemented"
        event.Skip()

    def OnOpenProject(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnOpenProject' not implemented"
        event.Skip()

    def OnSaveProject(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnSaveProject' not implemented"
        event.Skip()

    def OnBuildProject(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnBuildProject' not implemented"
        event.Skip()

    def OnSignProject(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnSignProject' not implemented"
        event.Skip()

    def OnForeImageSelect(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnForeImageSelect' not implemented"
        event.Skip()

    def OnBackImageSelect(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnBackImageSelect' not implemented"
        event.Skip()

    def OnTransitionTypeSelection(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnTransitionTypeSelection' not implemented"
        event.Skip()

    def OnDomainSelect(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnDomainSelect' not implemented"
        event.Skip()

    def OnAddDomain(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnAddDomain' not implemented"
        event.Skip()

    def OnAddFeature(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnAddFeature' not implemented"
        event.Skip()

    def OnRemoveButton(self, event): # wxGlade: MainWindow.<event_handler>
        print "Event handler `OnRemoveButton' not implemented"
        event.Skip()

    def OnCreateConfig(self, event): # wxGlade: MainWindow.<event_handler>
        """Write the configuration to config.xml in the project directory"""
        if True:
            configFile = "../../res/phone_config.xml"
        else:
            configFile = "../../res/tablet_config.xml"
        config = open(configFile, "r")
        
        # Read the contents of the file into a template for substitution later
        t = string.Template(config.read())
        config.close()

        # Substitute and write the config file
        destConfig = open(self.destDir + "/config.xml", "w")
        destConfig.write(t.substitute(self.placeholders))
        destConfig.close()
        
        # Write the other project files here.

# end of class MainWindow


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainWindow(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
